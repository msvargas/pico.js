{"version":3,"sources":["webpack://picojs/webpack/universalModuleDefinition","webpack://picojs/webpack/bootstrap","webpack://picojs/./src/index.ts","webpack://picojs/./src/picojs.ts","webpack://picojs/./src/default-options.ts","webpack://picojs/./src/pico.js","webpack://picojs/./src/lploc.js","webpack://picojs/./src/camvas.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","picojs","pico","loadFaceFinder","uri","fetchBinary","_baseUri","then","bytes","facefinder_classify_region","unpack_cascade","loaded","faceFinder","loadPupilFinder","do_puploc","lploc","unpack_localizer","pupilFinder","fetch","res","arrayBuffer","buffer","Int8Array","rgba","nrows","ncols","gray","Uint8Array","update_memory","instantiate_detection_memory","row","column","scale","pixels","ldim","col","npertubs","image","NaN","baseUri","Promise","all","ShapeValues","PicoImage","params","withPupils","threshold","iouthreshold","shape","ctx","shapeColor","pupilColor","defaultParams","Circle","FacePupilOptions","defaultOptions","options","assign","defaultSizeImage","dets","run_cascade","cluster_detections","result","faces","Array","length","pupils","x","y","score","beginPath","Square","rect","arc","Math","PI","lineWidth","strokeStyle","stroke","shiftfactor","minsize","maxsize","scalefactor","dview","DataView","ArrayBuffer","setUint8","tdepth","getInt32","ntrees","tcodes_ls","tpreds_ls","thresh_ls","push","apply","slice","pow","getFloat32","tcodes","tpreds","Float32Array","thresh","pow2tdepth","idx","j","classify_region","detections","step","max","offset","q","calculate_iou","det1","det2","r1","c1","s1","r2","c2","s2","overr","min","overc","sort","a","b","assignments","fill","clusters","size","memory","concat","nstages","scalemul","ntreesperstage","k","loc_fun","dr","dc","lutidx","nperturbs","rows","cols","_s","random","_r","_c","round","callback","constraints","video","audio","_raId","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","streamContainer","document","createElement","videoEl","setAttribute","appendChild","body","mediaDevices","stream","srcObject","update","err","paused","play","resolve","reject","stop","pause","getTracks","forEach","track","last","Date","now","console","log","loop","dt","requestAnimationFrame"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,6PClFrD,cACA,OAAS,WAAAC,QAET,UAAeC,G,8ECQf,WACA,OAmOS,EAAAC,KAnOA,EAAAA,KACT,WAiEA,SAAgBC,EAAeC,GAC7B,YAD6B,IAAAA,MAAA,kBACtB,EAAAC,YAAY,EAAAC,SAAWF,GAAKG,MAAK,SAAAC,GACtC,EAAAC,2BAA6B,EAAAP,KAAKQ,eAAeF,GACjD,EAAAG,OAAOC,YAAa,KAOxB,SAAgBC,EAAgBT,GAC9B,YAD8B,IAAAA,MAAA,cACvB,EAAAC,YAAY,EAAAC,SAAWF,GAAKG,MAAK,SAAAC,GACtC,EAAAM,UAAY,EAAAC,MAAMC,iBAAiBR,GACnC,EAAAG,OAAOM,aAAc,KAqJhB,EAAAF,MAnOA,EAAAA,MAEE,EAAAJ,OAAkB,CAC3BC,YAAY,EACZK,aAAa,GAMJ,EAAAZ,YAAmD,SAAAD,GAC5D,OAAAc,MAAMd,GACHG,MAAK,SAAAY,GAAO,OAAAA,EAAIC,iBAChBb,MAAK,SAAAc,GAAU,WAAIC,UAAUD,OAEvB,EAAAf,SACT,mEAQF,6BACEiB,EACAC,EACAC,GAGA,IADA,IAAIC,EAAO,IAAIC,WAAWH,EAAQC,GACzB3C,EAAI,EAAGA,EAAI0C,IAAS1C,EAC3B,IAAK,IAAIT,EAAI,EAAGA,EAAIoD,IAASpD,EAE3BqD,EAAK5C,EAAI2C,EAAQpD,IACd,EAAIkD,EAAS,EAAJzC,EAAQ2C,EAAQ,EAAIpD,EAAI,GAChC,EAAIkD,EAAS,EAAJzC,EAAQ2C,EAAQ,EAAIpD,EAAI,GACjC,EAAIkD,EAAS,EAAJzC,EAAQ2C,EAAQ,EAAIpD,EAAI,IACnC,GACN,OAAOqD,GAGE,EAAAE,cAAgB,EAAA1B,KAAK2B,6BAA6B,GAClD,EAAApB,2BAA6B,SACtCqB,EACAC,EACAC,EACAC,EACAC,GAEA,OAAQ,GAGC,EAAApB,UAAY,SACrBgB,EACAK,EACAH,EACAI,EACAC,GAEA,MAAO,EAAE,GAAM,EAAKC,IAAKA,MAM3B,mBAUA,oBAOA,gBAAqBC,GAEnB,OADIA,IAAS,EAAAjC,SAAWiC,GACjBC,QAAQC,IAAI,CAACtC,IAAkBU,OAGxC,IASY6B,EATZ,EACE,SACST,EACAT,EACAC,EACAS,GAHA,KAAAD,SACA,KAAAT,QACA,KAAAC,QACA,KAAAS,QALE,EAAAS,YASb,SAAYD,GACV,uBACA,uBAFF,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KAgBvB,MACE,SACSE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QAPA,IAAAP,MAAsB,EAAAQ,oBACtB,IAAAP,OAAA,QACA,IAAAC,MAAA,SACA,IAAAC,MAAA,SACA,IAAAC,MAAqBN,EAAYW,aAEjC,IAAAH,MAAA,iBACA,IAAAC,MAAA,OAPA,KAAAP,SACA,KAAAC,aACA,KAAAC,YACA,KAAAC,eACA,KAAAC,QACA,KAAAC,MACA,KAAAC,aACA,KAAAC,cATE,EAAAG,mBAaA,EAAAC,eAAiB,IAAID,EAIlC,kBACEjB,EACAmB,G,QAEInB,aAAiBV,aACnBU,EAAQ3D,OAAO+E,OAAmB,CAAExB,OAAQI,GAAS,EAAAqB,mBAGvD,IAAMT,GADNO,EAAU9E,OAAO+E,OAAO,GAAyB,EAAAF,eAAgBC,IAC7CP,IAIhBU,EAAO,EAAAzD,KAAK0D,YACdvB,EACA,EAAA5B,2BACA+C,EAAQZ,QAEVe,EAAO,EAAA/B,cAAc+B,GACrBA,EAAO,EAAAzD,KAAK2D,mBAAmBF,EAAMH,EAAQT,cAE7C,IAAMe,EAA2B,CAC/BC,MAAO,IAAIC,MAAML,EAAKM,SAEpBT,EAAQX,aAAYiB,EAAOI,OAAS,IAAIF,MAAML,EAAKM,SACvD,IAAK,IAAIjG,EAAI,EAAGA,EAAI2F,EAAKM,SAAUjG,EAIjC,GAAI2F,EAAK3F,GAAG,GAAKwF,EAAQV,UAAW,CAQlC,IAAIhE,EAAGT,EAAG0B,EAmBV,GA1BI+D,EAAOC,QACTD,EAAOC,MAAM/F,GAAK,CAChBmG,EAAGR,EAAK3F,GAAG,GACXoG,EAAGT,EAAK3F,GAAG,GACXgE,MAAO2B,EAAK3F,GAAG,GACfqG,MAAOV,EAAK3F,GAAG,KAGfiF,IACFA,EAAIqB,YACAd,EAAQR,OAASN,EAAY6B,OAC/BtB,EAAIuB,KAAKb,EAAK3F,GAAG,GAAI2F,EAAK3F,GAAG,GAAI2F,EAAK3F,GAAG,GAAI2F,EAAK3F,GAAG,IAErDiF,EAAIwB,IACFd,EAAK3F,GAAG,GACR2F,EAAK3F,GAAG,GACR2F,EAAK3F,GAAG,GAAK,EACb,EACA,EAAI0G,KAAKC,IACT,GAGJ1B,EAAI2B,UAAY,EAChB3B,EAAI4B,YAAcrB,EAAQN,WAC1BD,EAAI6B,UAEFtB,EAAQX,WAAY,CACtB,IAAMqB,EAA4B,IAAIF,MAAM,GAM5ClF,EAAI6E,EAAK3F,GAAG,GAAK,KAAQ2F,EAAK3F,GAAG,GACjCK,EAAIsF,EAAK3F,GAAG,GAAK,KAAQ2F,EAAK3F,GAAG,GACjC+B,EAAI,IAAO4D,EAAK3F,GAAG,GAClBc,GAAD,2BAAC,GAAGT,EAAA,KACAS,GAAK,GAAKT,GAAK,IACb4E,IACFA,EAAIqB,YACJrB,EAAIwB,IAAIpG,EAAGS,EAAG,EAAG,EAAG,EAAI4F,KAAKC,IAAI,GACjC1B,EAAI2B,UAAY,EAChB3B,EAAI4B,YAAcrB,EAAQL,WAC1BF,EAAI6B,UAENZ,EAAO,GAAK,CAAEC,EAAG9F,EAAG+F,EAAGtF,IAGzBA,EAAI6E,EAAK3F,GAAG,GAAK,KAAQ2F,EAAK3F,GAAG,GACjCK,EAAIsF,EAAK3F,GAAG,GAAK,KAAQ2F,EAAK3F,GAAG,GACjC+B,EAAI,IAAO4D,EAAK3F,GAAG,GAClBc,GAAD,2BAAC,GAAGT,EAAA,KACAS,GAAK,GAAKT,GAAK,IACb4E,IACFA,EAAIqB,YACJrB,EAAIwB,IAAIpG,EAAGS,EAAG,EAAG,EAAG,EAAI4F,KAAKC,IAAI,GACjC1B,EAAI2B,UAAY,EAChB3B,EAAI4B,YAAcrB,EAAQL,WAC1BF,EAAI6B,UAENZ,EAAO,GAAK,CAAEC,EAAG9F,EAAG+F,EAAGtF,IAErBgF,EAAOI,SAAQJ,EAAOI,OAAOlG,GAAKkG,IAG5C,OAAOJ,I,8EC1OI,EAAAJ,iBAAmC,CAC9ClC,MAAO,IACPC,MAAO,IACPS,KAAM,KAGK,EAAAkB,cAA6B,CACxC2B,YAAa,GACbC,QAAS,IACTC,QAAS,IACTC,YAAa,M,cCXf,IAAIhF,EAAO,CAEX,eAAsB,SAASM,GAG9B,MAAM2E,EAAQ,IAAIC,SAAS,IAAIC,YAAY,IAK3C,IAAIvF,EAAI,EAIRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAMyF,EAASJ,EAAMK,SAAS,GAAG,GACjC1F,GAAQ,EAIRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAM2F,EAASN,EAAMK,SAAS,GAAG,GACjC1F,GAAQ,EAIR,MAAM4F,EAAY,GACZC,EAAY,GACZC,EAAY,GAClB,IAAI,IAAI1G,EAAE,EAAGA,EAAEuG,IAAUvG,EACzB,CAEC8E,MAAMpE,UAAUiG,KAAKC,MAAMJ,EAAW,CAAC,EAAG,EAAG,EAAG,IAChD1B,MAAMpE,UAAUiG,KAAKC,MAAMJ,EAAWlF,EAAMuF,MAAMjG,EAAGA,EAAE,EAAE4E,KAAKsB,IAAI,EAAGT,GAAQ,IAC7EzF,EAAIA,EAAI,EAAE4E,KAAKsB,IAAI,EAAGT,GAAQ,EAE9B,IAAI,IAAIvH,EAAE,EAAGA,EAAE0G,KAAKsB,IAAI,EAAGT,KAAWvH,EAErCmH,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH6F,EAAUE,KAAKV,EAAMc,WAAW,GAAG,IACnCnG,GAAQ,EAGTqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH8F,EAAUC,KAAKV,EAAMc,WAAW,GAAG,IACnCnG,GAAQ,EAET,MAAMoG,EAAS,IAAI5E,UAAUoE,GACvBS,EAAS,IAAIC,aAAaT,GAC1BU,EAAS,IAAID,aAAaR,GA+BhC,OA3BA,SAAyB9G,EAAGT,EAAG0B,EAAGkC,EAAQC,GAExCpD,GAAI,IACJT,GAAI,IACJ,IAAIf,EAAO,EACPmB,EAAI,EACR,MAAM6H,EAAa5B,KAAKsB,IAAI,EAAGT,IAAW,EAE1C,IAAI,IAAIvH,EAAE,EAAGA,EAAEyH,IAAUzH,EACzB,CACAuI,IAAM,EACN,IAAI,IAAIC,EAAE,EAAGA,EAAEjB,IAAUiB,EAExBD,IAAM,EAAEA,KAAOtE,GAASnD,EAAEoH,EAAO5I,EAAO,EAAEiJ,IAAM,GAAGxG,GAAM,GAAGmC,GAAO7D,EAAE6H,EAAO5I,EAAO,EAAEiJ,IAAM,GAAGxG,GAAM,KAAKkC,GAASnD,EAAEoH,EAAO5I,EAAO,EAAEiJ,IAAM,GAAGxG,GAAM,GAAGmC,GAAO7D,EAAE6H,EAAO5I,EAAO,EAAEiJ,IAAM,GAAGxG,GAAM,KAI9L,IAFAtB,GAAQ0H,EAAOG,EAAWtI,EAAIuI,IAAID,KAE5BD,EAAOrI,GACZ,OAAQ,EAETV,GAAQ,EAAEgJ,EAEZ,OAAO7H,EAAI4H,EAAOZ,EAAO,KAQ3B,YAAmB,SAASpD,EAAOoE,EAAiB7D,GAEnD,MAAMX,EAASI,EAAMJ,OACfT,EAAQa,EAAMb,MACdC,EAAQY,EAAMZ,MACdS,EAAOG,EAAMH,KAEb6C,EAAcnC,EAAOmC,YACrBC,EAAUpC,EAAOoC,QACjBC,EAAUrC,EAAOqC,QACjBC,EAActC,EAAOsC,YAE3B,IAAIlD,EAAQgD,EACZ,MAAM0B,EAAa,GAEnB,KAAM1E,GAAOiD,GACb,CACC,MAAM0B,EAAOjC,KAAKkC,IAAI7B,EAAY/C,EAAO,IAAM,EACzC6E,EAAU7E,EAAM,EAAI,GAAM,EAEhC,IAAI,IAAIlD,EAAE+H,EAAQ/H,GAAG0C,EAAMqF,EAAQ/H,GAAG6H,EACrC,IAAI,IAAItI,EAAEwI,EAAQxI,GAAGoD,EAAMoF,EAAQxI,GAAGsI,EACtC,CACC,MAAMG,EAAIL,EAAgB3H,EAAGT,EAAG2D,EAAOC,EAAQC,GAC3C4E,EAAI,GACPJ,EAAWb,KAAK,CAAC/G,EAAGT,EAAG2D,EAAO8E,IAGjC9E,GAAckD,EAGZ,OAAOwB,GAGX,mBAA0B,SAAS/C,EAAMZ,GAWxC,SAASgE,EAAcC,EAAMC,GAG5B,MAAMC,EAAGF,EAAK,GAAIG,EAAGH,EAAK,GAAII,EAAGJ,EAAK,GAChCK,EAAGJ,EAAK,GAAIK,EAAGL,EAAK,GAAIM,EAAGN,EAAK,GAEhCO,EAAQ9C,KAAKkC,IAAI,EAAGlC,KAAK+C,IAAIP,EAAGE,EAAG,EAAGC,EAAGE,EAAG,GAAK7C,KAAKkC,IAAIM,EAAGE,EAAG,EAAGC,EAAGE,EAAG,IACzEG,EAAQhD,KAAKkC,IAAI,EAAGlC,KAAK+C,IAAIN,EAAGC,EAAG,EAAGE,EAAGC,EAAG,GAAK7C,KAAKkC,IAAIO,EAAGC,EAAG,EAAGE,EAAGC,EAAG,IAE/E,OAAOC,EAAME,GAAON,EAAGA,EAAGG,EAAGA,EAAGC,EAAME,GAfvC/D,EAAOA,EAAKgE,MAAK,SAASC,EAAGC,GAC5B,OAAOA,EAAE,GAAKD,EAAE,MAmBjB,MAAME,EAAc,IAAI9D,MAAML,EAAKM,QAAQ8D,KAAK,GAC1CC,EAAW,GACjB,IAAI,IAAIhK,EAAE,EAAGA,EAAE2F,EAAKM,SAAUjG,EAG7B,GAAmB,GAAhB8J,EAAY9J,GACf,CAGC,IAAIc,EAAE,EAAKT,EAAE,EAAK0B,EAAE,EAAK+G,EAAE,EAAKrH,EAAE,EAClC,IAAI,IAAI+G,EAAExI,EAAGwI,EAAE7C,EAAKM,SAAUuC,EAC1BO,EAAcpD,EAAK3F,GAAI2F,EAAK6C,IAAIzD,IAElC+E,EAAYtB,GAAK,EACjB1H,GAAQ6E,EAAK6C,GAAG,GAChBnI,GAAQsF,EAAK6C,GAAG,GAChBzG,GAAQ4D,EAAK6C,GAAG,GAChBM,GAAQnD,EAAK6C,GAAG,GAChB/G,GAAQ,GAGVuI,EAASnC,KAAK,CAAC/G,EAAEW,EAAGpB,EAAEoB,EAAGM,EAAEN,EAAGqH,IAIhC,OAAOkB,GAGR,6BAAoC,SAASC,GAK5C,IAAIxI,EAAI,EACR,MAAMyI,EAAS,GACf,IAAI,IAAIlK,EAAE,EAAGA,EAAEiK,IAAQjK,EACtBkK,EAAOrC,KAAK,IAmBb,OAbA,SAAuBlC,GAKtB,IAHAuE,EAAOzI,GAAKkE,EACZlE,GAAKA,EAAE,GAAGyI,EAAOjE,OACjBN,EAAO,GACH3F,EAAE,EAAGA,EAAEkK,EAAOjE,SAAUjG,EAC3B2F,EAAOA,EAAKwE,OAAOD,EAAOlK,IAE3B,OAAO2F,KAQTnG,EAAQ0C,KAAOA,G,cCxMf,IAAIa,EAAQ,CAEZ,iBAAyB,SAASP,GAGjC,MAAM2E,EAAQ,IAAIC,SAAS,IAAIC,YAAY,IAC3C,IAAIvF,EAAI,EAKRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAMsI,EAAUjD,EAAMK,SAAS,GAAG,GAClC1F,GAAQ,EACRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAMuI,EAAWlD,EAAMc,WAAW,GAAG,GACrCnG,GAAQ,EACRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAMwI,EAAiBnD,EAAMK,SAAS,GAAG,GACzC1F,GAAQ,EACRqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH,MAAMyF,EAASJ,EAAMK,SAAS,GAAG,GACjC1F,GAAQ,EAIR,MAAM4F,EAAY,GACZC,EAAY,GAClB,IAAI,IAAI3H,EAAE,EAAGA,EAAEoK,IAAWpK,EAGzB,IAAI,IAAIwI,EAAE,EAAGA,EAAE8B,IAAkB9B,EACjC,CAECxC,MAAMpE,UAAUiG,KAAKC,MAAMJ,EAAWlF,EAAMuF,MAAMjG,EAAGA,EAAE,EAAE4E,KAAKsB,IAAI,EAAGT,GAAQ,IAC7EzF,EAAIA,EAAI,EAAE4E,KAAKsB,IAAI,EAAGT,GAAQ,EAE9B,IAAI,IAAIgD,EAAE,EAAGA,EAAE7D,KAAKsB,IAAI,EAAGT,KAAWgD,EACrC,IAAI,IAAItK,EAAE,EAAGA,EAAE,IAAKA,EAEnBkH,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IAAKqF,EAAMG,SAAS,EAAG9E,EAAMV,EAAE,IACvH6F,EAAUE,KAAKV,EAAMc,WAAW,GAAG,IACnCnG,GAAQ,EAIZ,MAAMoG,EAAS,IAAI5E,UAAUoE,GACvBS,EAAS,IAAIC,aAAaT,GAIhC,SAAS6C,EAAQ1J,EAAGT,EAAG0B,EAAGkC,EAAQT,EAAOC,EAAOS,GAE/C,IAAI5E,EAAO,EACX,MAAMgJ,EAAa5B,KAAKsB,IAAI,EAAGT,IAAW,EAE1C,IAAI,IAAIvH,EAAE,EAAGA,EAAEoK,IAAWpK,EAC1B,CACC,IAAIyK,EAAG,EAAKC,EAAG,EAEf,IAAI,IAAIlC,EAAE,EAAGA,EAAE8B,IAAkB9B,EACjC,CACC,IAAID,EAAM,EACV,IAAI,IAAIgC,EAAE,EAAGA,EAAEhD,IAAUgD,EACzB,CACC,MAAMrB,EAAKxC,KAAK+C,IAAIjG,EAAM,EAAGkD,KAAKkC,IAAI,EAAI,IAAI9H,EAAEoH,EAAO5I,EAAO,EAAEiJ,EAAM,GAAGxG,GAAI,IACvEoH,EAAKzC,KAAK+C,IAAIhG,EAAM,EAAGiD,KAAKkC,IAAI,EAAI,IAAIvI,EAAE6H,EAAO5I,EAAO,EAAEiJ,EAAM,GAAGxG,GAAI,IACvEsH,EAAK3C,KAAK+C,IAAIjG,EAAM,EAAGkD,KAAKkC,IAAI,EAAI,IAAI9H,EAAEoH,EAAO5I,EAAO,EAAEiJ,EAAM,GAAGxG,GAAI,IACvEuH,EAAK5C,KAAK+C,IAAIhG,EAAM,EAAGiD,KAAKkC,IAAI,EAAI,IAAIvI,EAAE6H,EAAO5I,EAAO,EAAEiJ,EAAM,GAAGxG,GAAI,IAE7EwG,EAAM,EAAEA,EAAM,GAAKtE,EAAOiF,EAAGhF,EAAKiF,GAAMlF,EAAOoF,EAAGnF,EAAKoF,IAGxD,MAAMqB,EAAS,GAAGL,EAAehC,EAAWtI,EAAIsI,EAAWE,EAAID,GAAOD,EAAa,IACnFmC,GAAMtC,EAAOwC,EAAS,GACtBD,GAAMvC,EAAOwC,EAAS,GAEtBrL,GAAQ,EAAEgJ,EAAa,EAGxBxH,GAAQ2J,EAAG1I,EACX1B,GAAQqK,EAAG3I,EAEXA,GAAMsI,EAGP,MAAO,CAACvJ,EAAGT,GA8BZ,OAzBA,SAA+BS,EAAGT,EAAG0B,EAAG6I,EAAWvG,GAElD,MAAMwG,EAAK,GAAIC,EAAK,GAEpB,IAAI,IAAI9K,EAAE,EAAGA,EAAE4K,IAAa5K,EAC5B,CACC,MAAM+K,EAAKhJ,GAAG,KAAQ,IAAK2E,KAAKsE,UAChC,IAAIC,EAAKnK,EAAM,IAAFiB,GAAQ,GAAM2E,KAAKsE,UAC5BE,EAAK7K,EAAM,IAAF0B,GAAQ,GAAM2E,KAAKsE,WAE/BC,EAAIC,GAAMV,EAAQS,EAAIC,EAAIH,EAAI1G,EAAMJ,OAAQI,EAAMb,MAAOa,EAAMZ,MAAOY,EAAMH,MAE7E2G,EAAKhD,KAAKoD,GACVH,EAAKjD,KAAKqD,GAOX,OAHAL,EAAKlB,OACLmB,EAAKnB,OAEE,CAACkB,EAAKnE,KAAKyE,MAAMP,EAAU,IAAKE,EAAKpE,KAAKyE,MAAMP,EAAU,QAQnEpL,EAAQuD,MAAQA,G,8EC1GhB,iBAOE,WACSqI,EACAC,GAFT,gBAES,IAAAA,MAAA,CAAwCC,OAAO,EAAMC,OAAO,IAD5D,KAAAH,WACA,KAAAC,cAPD,KAAAG,MAAgB,EAStBC,UAAUC,aACRD,UAAUC,cACTD,UAAkBE,oBAClBF,UAAkBG,gBACrBhM,KAAKwL,SAAWA,EAIhB,IAAIS,EAAkBC,SAASC,cAAc,OAC7CnM,KAAKoM,QAAUF,SAASC,cAAc,SAKtCnM,KAAKoM,QAAQC,aAAa,WAAY,KACtCrM,KAAKoM,QAAQC,aAAa,cAAe,KAGzCrM,KAAKoM,QAAQC,aAAa,QAAS,KACnCrM,KAAKoM,QAAQC,aAAa,SAAU,KAEpCJ,EAAgBK,YAAYtM,KAAKoM,SACjCF,SAASK,KAAKD,YAAYL,GAC1BJ,UAAUW,aAAaV,aAAaL,GAAa9I,MAC/C,SAAA8J,GAGE,EAAKL,QAAQM,UAAYD,EACzB,EAAKE,YAEP,SAAAC,GACE,GAAIA,EAAK,MAAMA,KA4EvB,OArEE,sBAAI,sBAAO,C,IAAX,WACE,OAAQ5M,KAAKoM,QAAQS,Q,gCAKvB,sBAAI,oBAAK,C,IAAT,WACE,OAAO7M,KAAKoM,S,gCAMd,YAAAU,KAAA,sBAEE,OAAO,IAAIlI,SAAQ,SAACmI,EAASC,GACrB,EAAKZ,QAAQM,YACjB,EAAKN,QAAQS,OACT,EAAKT,QACFU,OACAnK,MAAK,WAAM,SAAKgK,YAChBhK,KAAKoK,GACRA,SAOV,YAAAE,KAAA,WACMjN,KAAKoM,SAAWpM,KAAKoM,QAAQM,YAC/B1M,KAAKkN,QAESlN,KAAKoM,QAAQM,UACxBS,YACAC,SAAQ,SAAAC,GAAS,OAAAA,EAAMJ,UAC1BjN,KAAKoM,QAAQM,UAAY,OAM7B,YAAAQ,MAAA,WACElN,KAAKoM,QAAQc,SAMP,YAAAP,OAAR,sBACE,GAAK3M,KAAKwL,SAAV,CACA,IAAI8B,EAAOC,KAAKC,MAChBC,QAAQC,IAAI1N,KAAKoM,SACjB,IAAIuB,EAAO,WAST,IAAIC,EAAKL,KAAKC,MAAQF,EACtB,EAAK9B,UAAY,EAAKA,SAAS,EAAKY,QAASwB,GAC7CN,EAAOC,KAAKC,MACZ,EAAK5B,MAAQiC,sBAAsBF,IAErC3N,KAAK4L,MAAQiC,sBAAsBF,KAEvC,EAtHA,G","file":"picojs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"picojs\"] = factory();\n\telse\n\t\troot[\"picojs\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as picojs from \"./picojs\";\r\nexport { default as Camvas } from \"./camvas\";\r\nimport { ILoaded } from \"../typings/global\";\r\nexport default picojs;","import {\r\n  Pixels,\r\n  ILoaded,\r\n  PupilPosition,\r\n  IPicoImage,\r\n  Height,\r\n  Width,\r\n  IPicoParams,\r\n  IPupilDetection,\r\n  IDetectionResult\r\n} from \"../typings/global\";\r\nimport { defaultParams, defaultSizeImage } from \"./default-options\";\r\nimport { pico } from \"./pico\";\r\nimport { lploc } from \"./lploc\";\r\n\r\nexport var loaded: ILoaded = {\r\n  faceFinder: false,\r\n  pupilFinder: false\r\n};\r\n/**\r\n *\r\n * @param uri URI to load binaries finders\r\n */\r\nexport var fetchBinary: (uri: string) => Promise<Int8Array> = uri =>\r\n  fetch(uri)\r\n    .then(res => res.arrayBuffer())\r\n    .then(buffer => new Int8Array(buffer));\r\n\r\nexport var _baseUri: string =\r\n  \"https://raw.githubusercontent.com/punisher97/pico.js/master/bin/\";\r\n\r\n/**\r\n * @description convert rgba image to gray scale\r\n * @param rgba input\r\n * @param nrows height\r\n * @param ncols width\r\n */\r\nexport function rgba_to_grayscale(\r\n  rgba: Uint8ClampedArray,\r\n  nrows: Height,\r\n  ncols: Width\r\n): Pixels {\r\n  var gray = new Uint8Array(nrows * ncols);\r\n  for (var r = 0; r < nrows; ++r)\r\n    for (var c = 0; c < ncols; ++c)\r\n      // gray = 0.2*red + 0.7*green + 0.1*blue\r\n      gray[r * ncols + c] =\r\n        (2 * rgba[r * 4 * ncols + 4 * c + 0] +\r\n          7 * rgba[r * 4 * ncols + 4 * c + 1] +\r\n          1 * rgba[r * 4 * ncols + 4 * c + 2]) /\r\n        10;\r\n  return gray;\r\n}\r\n\r\nexport var update_memory = pico.instantiate_detection_memory(5);\r\nexport var facefinder_classify_region = function(\r\n  row: Height,\r\n  column: Width,\r\n  scale: number,\r\n  pixels: Pixels,\r\n  ldim?: number\r\n) {\r\n  return -1.0;\r\n};\r\n\r\nexport var do_puploc = function(\r\n  row: Height,\r\n  col: Width,\r\n  scale: number,\r\n  npertubs: number,\r\n  image: IPicoImage\r\n): PupilPosition {\r\n  return [-1.0, -1.0, NaN, NaN];\r\n};\r\n/**\r\n * Load facefinder\r\n * @param uri Uri with baseUri to fetch facefinder.bin\r\n */\r\nexport function loadFaceFinder(uri: string = \"facefinder.bin\"): Promise<any> {\r\n  return fetchBinary(_baseUri + uri).then(bytes => {\r\n    facefinder_classify_region = pico.unpack_cascade(bytes);\r\n    loaded.faceFinder = true;\r\n  });\r\n}\r\n/**\r\n * Load puploc.bin\r\n * @param uri full uri or default uri with baseUri\r\n */\r\nexport function loadPupilFinder(uri: string = \"puploc.bin\"): Promise<any> {\r\n  return fetchBinary(_baseUri + uri).then(bytes => {\r\n    do_puploc = lploc.unpack_localizer(bytes);\r\n    loaded.pupilFinder = true;\r\n  });\r\n}\r\n\r\nexport function load(baseUri?: string): Promise<any> {\r\n  if (baseUri) _baseUri = baseUri;\r\n  return Promise.all([loadFaceFinder(), loadPupilFinder()]);\r\n}\r\n\r\nexport class PicoImage implements IPicoImage {\r\n  constructor(\r\n    public pixels: Pixels,\r\n    public nrows: Height,\r\n    public ncols: Width,\r\n    public ldim: number\r\n  ) {}\r\n}\r\n\r\nexport enum ShapeValues {\r\n  Circle,\r\n  Square\r\n}\r\n\r\nexport interface IFacePupilOptions {\r\n  params: IPicoParams;\r\n  withPupils: boolean;\r\n  threshold: number;\r\n  iouthreshold: number;\r\n  shape: ShapeValues;\r\n  ctx?: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\r\n  shapeColor: string;\r\n  pupilColor: string;\r\n}\r\n\r\nexport class FacePupilOptions implements IFacePupilOptions {\r\n  constructor(\r\n    public params: IPicoParams = defaultParams,\r\n    public withPupils: boolean = true,\r\n    public threshold: number = 50.0,\r\n    public iouthreshold: number = 0.2,\r\n    public shape: ShapeValues = ShapeValues.Circle,\r\n    public ctx?: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\r\n    public shapeColor: string = \"darkblue\",\r\n    public pupilColor: string = \"red\"\r\n  ) {}\r\n}\r\n\r\nexport const defaultOptions = new FacePupilOptions();\r\n/**\r\n * @description detect face\r\n */\r\nexport function detect(\r\n  image: Pixels | PicoImage | IPicoImage,\r\n  options?: FacePupilOptions | IFacePupilOptions\r\n) {\r\n  if (image instanceof Uint8Array) {\r\n    image = Object.assign(<IPicoImage>{ pixels: image }, defaultSizeImage);\r\n  }\r\n  options = Object.assign({} as IFacePupilOptions, defaultOptions, options);\r\n  const ctx = options.ctx;\r\n  // run the cascade over the frame and cluster the obtained detections\r\n  // dets is an array that contains (r, c, s, q) quadruplets\r\n  // (representing row, column, scale and detection score)\r\n  let dets = pico.run_cascade(\r\n    image,\r\n    facefinder_classify_region,\r\n    options.params\r\n  );\r\n  dets = update_memory(dets);\r\n  dets = pico.cluster_detections(dets, options.iouthreshold); // set IoU threshold to 0.2\r\n\r\n  const result: IDetectionResult = {\r\n    faces: new Array(dets.length)\r\n  };\r\n  if (options.withPupils) result.pupils = new Array(dets.length);\r\n  for (let i = 0; i < dets.length; ++i)\r\n    // check the detection score\r\n    // if it's above the threshold, draw it\r\n    // (the constant 50.0 is empirical: other cascades might require a different one)\r\n    if (dets[i][3] > options.threshold) {\r\n      if (result.faces)\r\n        result.faces[i] = {\r\n          x: dets[i][1],\r\n          y: dets[i][0],\r\n          scale: dets[i][2],\r\n          score: dets[i][3]\r\n        };\r\n      var r, c, s;\r\n      if (ctx) {\r\n        ctx.beginPath();\r\n        if (options.shape == ShapeValues.Square) {\r\n          ctx.rect(dets[i][1], dets[i][0], dets[i][2], dets[i][2]);\r\n        } else {\r\n          ctx.arc(\r\n            dets[i][1],\r\n            dets[i][0],\r\n            dets[i][2] / 2,\r\n            0,\r\n            2 * Math.PI,\r\n            false\r\n          );\r\n        }\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = options.shapeColor;\r\n        ctx.stroke();\r\n      }\r\n      if (options.withPupils) {\r\n        const pupils: IPupilDetection[] = new Array(2);\r\n        //\r\n        // find the eye pupils for each detected face\r\n        // starting regions for localization are initialized based on the face bounding box\r\n        // (parameters are set empirically)\r\n        // first eye\r\n        r = dets[i][0] - 0.075 * dets[i][2];\r\n        c = dets[i][1] - 0.175 * dets[i][2];\r\n        s = 0.35 * dets[i][2];\r\n        [r, c] = do_puploc(r, c, s, 63, image);\r\n        if (r >= 0 && c >= 0) {\r\n          if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.arc(c, r, 1, 0, 2 * Math.PI, false);\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = options.pupilColor;\r\n            ctx.stroke();\r\n          }\r\n          pupils[0] = { x: c, y: r };\r\n        }\r\n        // second eye\r\n        r = dets[i][0] - 0.075 * dets[i][2];\r\n        c = dets[i][1] + 0.175 * dets[i][2];\r\n        s = 0.35 * dets[i][2];\r\n        [r, c] = do_puploc(r, c, s, 63, image);\r\n        if (r >= 0 && c >= 0) {\r\n          if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.arc(c, r, 1, 0, 2 * Math.PI, false);\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = options.pupilColor;\r\n            ctx.stroke();\r\n          }\r\n          pupils[1] = { x: c, y: r };\r\n        }\r\n        if (result.pupils) result.pupils[i] = pupils;\r\n      }\r\n    }\r\n  return result;\r\n}\r\n\r\nexport { pico };\r\nexport { lploc };\r\n","import { IPicoSizeImage, IPicoParams } from \"../typings/global\";\r\n\r\nexport const defaultSizeImage: IPicoSizeImage = {\r\n  nrows: 480,\r\n  ncols: 640,\r\n  ldim: 640\r\n};\r\n\r\nexport const defaultParams: IPicoParams = {\r\n  shiftfactor: 0.1,\r\n  minsize: 100,\r\n  maxsize: 1000,\r\n  scalefactor: 1.1\r\n};\r\n","/* This library is released under the MIT license, see https://github.com/tehnokv/picojs */\nvar pico = {}\n\npico.unpack_cascade = function(bytes)\n{\n\t//\n\tconst dview = new DataView(new ArrayBuffer(4));\n\t/*\n\t\twe skip the first 8 bytes of the cascade file\n\t\t(cascade version number and some data used during the learning process)\n\t*/\n\tlet p = 8;\n\t/*\n\t\tread the depth (size) of each tree first: a 32-bit signed integer\n\t*/\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst tdepth = dview.getInt32(0, true);\n\tp = p + 4\n\t/*\n\t\tnext, read the number of trees in the cascade: another 32-bit signed integer\n\t*/\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst ntrees = dview.getInt32(0, true);\n\tp = p + 4\n\t/*\n\t\tread the actual trees and cascade thresholds\n\t*/\n\tconst tcodes_ls = [];\n\tconst tpreds_ls = [];\n\tconst thresh_ls = [];\n\tfor(let t=0; t<ntrees; ++t)\n\t{\n\t\t// read the binary tests placed in internal tree nodes\n\t\tArray.prototype.push.apply(tcodes_ls, [0, 0, 0, 0]);\n\t\tArray.prototype.push.apply(tcodes_ls, bytes.slice(p, p+4*Math.pow(2, tdepth)-4));\n\t\tp = p + 4*Math.pow(2, tdepth)-4;\n\t\t// read the prediction in the leaf nodes of the tree\n\t\tfor(let i=0; i<Math.pow(2, tdepth); ++i)\n\t\t{\n\t\t\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\t\t\ttpreds_ls.push(dview.getFloat32(0, true));\n\t\t\tp = p + 4;\n\t\t}\n\t\t// read the threshold\n\t\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\t\tthresh_ls.push(dview.getFloat32(0, true));\n\t\tp = p + 4;\n\t}\n\tconst tcodes = new Int8Array(tcodes_ls);\n\tconst tpreds = new Float32Array(tpreds_ls);\n\tconst thresh = new Float32Array(thresh_ls);\n\t/*\n\t\tconstruct the classification function from the read data\n\t*/\n\tfunction classify_region(r, c, s, pixels, ldim)\n\t{\n\t\t r = 256*r;\n\t\t c = 256*c;\n\t\t let root = 0;\n\t\t let o = 0.0;\n\t\t const pow2tdepth = Math.pow(2, tdepth) >> 0; // '>>0' transforms this number to int\n\n\t\t for(let i=0; i<ntrees; ++i)\n\t\t {\n\t\t\tidx = 1;\n\t\t\tfor(let j=0; j<tdepth; ++j)\n\t\t\t\t// we use '>> 8' here to perform an integer division: this seems important for performance\n\t\t\t\tidx = 2*idx + (pixels[((r+tcodes[root + 4*idx + 0]*s) >> 8)*ldim+((c+tcodes[root + 4*idx + 1]*s) >> 8)]<=pixels[((r+tcodes[root + 4*idx + 2]*s) >> 8)*ldim+((c+tcodes[root + 4*idx + 3]*s) >> 8)]);\n\n\t\t\t o = o + tpreds[pow2tdepth*i + idx-pow2tdepth];\n\n\t\t\t if(o<=thresh[i])\n\t\t\t\t return -1;\n\n\t\t\t root += 4*pow2tdepth;\n\t\t}\n\t\treturn o - thresh[ntrees-1];\n\t}\n\t/*\n\t\twe're done\n\t*/\n\treturn classify_region;\n}\n\npico.run_cascade = function(image, classify_region, params)\n{\n\tconst pixels = image.pixels;\n\tconst nrows = image.nrows;\n\tconst ncols = image.ncols;\n\tconst ldim = image.ldim;\n\n\tconst shiftfactor = params.shiftfactor;\n\tconst minsize = params.minsize;\n\tconst maxsize = params.maxsize;\n\tconst scalefactor = params.scalefactor;\n\n\tlet scale = minsize;\n\tconst detections = [];\n\n\twhile(scale<=maxsize)\n\t{\n\t\tconst step = Math.max(shiftfactor*scale, 1) >> 0; // '>>0' transforms this number to int\n\t\tconst offset = (scale/2 + 1) >> 0;\n\n\t\tfor(let r=offset; r<=nrows-offset; r+=step)\n\t\t\tfor(let c=offset; c<=ncols-offset; c+=step)\n\t\t\t{\n\t\t\t\tconst q = classify_region(r, c, scale, pixels, ldim);\n\t\t\t\tif (q > 0.0)\n\t\t\t\t\tdetections.push([r, c, scale, q]);\n\t\t\t}\n\t\t\n\t\tscale = scale*scalefactor;\n\t}\n\n    return detections;\n}\n\npico.cluster_detections = function(dets, iouthreshold)\n{\n\t/*\n\t\tsort detections by their score\n\t*/\n\tdets = dets.sort(function(a, b) {\n\t\treturn b[3] - a[3];\n\t});\n\t/*\n\t\tthis helper function calculates the intersection over union for two detections\n\t*/\n\tfunction calculate_iou(det1, det2)\n\t{\n\t\t// unpack the position and size of each detection\n\t\tconst r1=det1[0], c1=det1[1], s1=det1[2];\n\t\tconst r2=det2[0], c2=det2[1], s2=det2[2];\n\t\t// calculate detection overlap in each dimension\n\t\tconst overr = Math.max(0, Math.min(r1+s1/2, r2+s2/2) - Math.max(r1-s1/2, r2-s2/2));\n\t\tconst overc = Math.max(0, Math.min(c1+s1/2, c2+s2/2) - Math.max(c1-s1/2, c2-s2/2));\n\t\t// calculate and return IoU\n\t\treturn overr*overc/(s1*s1+s2*s2-overr*overc);\n\t}\n\t/*\n\t\tdo clustering through non-maximum suppression\n\t*/\n\tconst assignments = new Array(dets.length).fill(0);\n\tconst clusters = [];\n\tfor(let i=0; i<dets.length; ++i)\n\t{\n\t\t// is this detection assigned to a cluster?\n\t\tif(assignments[i]==0)\n\t\t{\n\t\t\t// it is not:\n\t\t\t// now we make a cluster out of it and see whether some other detections belong to it\n\t\t\tlet r=0.0, c=0.0, s=0.0, q=0.0, n=0;\n\t\t\tfor(let j=i; j<dets.length; ++j)\n\t\t\t\tif(calculate_iou(dets[i], dets[j])>iouthreshold)\n\t\t\t\t{\n\t\t\t\t\tassignments[j] = 1;\n\t\t\t\t\tr = r + dets[j][0];\n\t\t\t\t\tc = c + dets[j][1];\n\t\t\t\t\ts = s + dets[j][2];\n\t\t\t\t\tq = q + dets[j][3];\n\t\t\t\t\tn = n + 1;\n\t\t\t\t}\n\t\t\t// make a cluster representative\n\t\t\tclusters.push([r/n, c/n, s/n, q]);\n\t\t}\n\t}\n\n\treturn clusters;\n}\n\npico.instantiate_detection_memory = function(size)\n{\n\t/*\n\t\tinitialize a circular buffer of `size` elements\n\t*/\n\tlet n = 0;\n\tconst memory = [];\n\tfor(let i=0; i<size; ++i)\n\t\tmemory.push([]);\n\t/*\n\t\tbuild a function that:\n\t\t(1) inserts the current frame's detections into the buffer;\n\t\t(2) merges all detections from the last `size` frames and returns them\n\t*/\n\tfunction update_memory(dets)\n\t{\n\t\tmemory[n] = dets;\n\t\tn = (n+1)%memory.length;\n\t\tdets = [];\n\t\tfor(i=0; i<memory.length; ++i)\n\t\t\tdets = dets.concat(memory[i]);\n\t\t//\n\t\treturn dets;\n\t}\n\t/*\n\t\twe're done\n\t*/\n\treturn update_memory;\n}\n\nexports.pico = pico","/* This library is released under the MIT license, contact @tehnokv for more details */\nvar lploc = {}\n\nlploc.unpack_localizer = function(bytes)\n{\n\t//\n\tconst dview = new DataView(new ArrayBuffer(4));\n\tlet p = 0;\n\t/*\n\t\tread the number of stages, scale multiplier (applied after each stage),\n\t\tnumber of trees per stage and depth of each tree\n\t*/\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst nstages = dview.getInt32(0, true);\n\tp = p + 4;\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst scalemul = dview.getFloat32(0, true);\n\tp = p + 4;\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst ntreesperstage = dview.getInt32(0, true);\n\tp = p + 4;\n\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\tconst tdepth = dview.getInt32(0, true);\n\tp = p + 4;\n\t/*\n\t\tunpack the trees\n\t*/\n\tconst tcodes_ls = [];\n\tconst tpreds_ls = [];\n\tfor(let i=0; i<nstages; ++i)\n\t{\n\t\t// read the trees for this stage\n\t\tfor(let j=0; j<ntreesperstage; ++j)\n\t\t{\n\t\t\t// binary tests (we can read all of them at once)\n\t\t\tArray.prototype.push.apply(tcodes_ls, bytes.slice(p, p+4*Math.pow(2, tdepth)-4));\n\t\t\tp = p + 4*Math.pow(2, tdepth)-4;\n\t\t\t// read the prediction in the leaf nodes of the tree\n\t\t\tfor(let k=0; k<Math.pow(2, tdepth); ++k)\n\t\t\t\tfor(let l=0; l<2; ++l)\n\t\t\t\t{\n\t\t\t\t\tdview.setUint8(0, bytes[p+0]), dview.setUint8(1, bytes[p+1]), dview.setUint8(2, bytes[p+2]), dview.setUint8(3, bytes[p+3]);\n\t\t\t\t\ttpreds_ls.push(dview.getFloat32(0, true));\n\t\t\t\t\tp = p + 4;\n\t\t\t\t}\n\t\t}\n\t}\n\tconst tcodes = new Int8Array(tcodes_ls);\n\tconst tpreds = new Float32Array(tpreds_ls);\n\t/*\n\t\tconstruct the location estimaton function\n\t*/\n\tfunction loc_fun(r, c, s, pixels, nrows, ncols, ldim)\n\t{\n\t\tlet root = 0;\n\t\tconst pow2tdepth = Math.pow(2, tdepth) >> 0; // '>>0' transforms this number to int\n\n\t\tfor(let i=0; i<nstages; ++i)\n\t\t{\n\t\t\tlet dr=0.0, dc=0.0;\n\n\t\t\tfor(let j=0; j<ntreesperstage; ++j)\n\t\t\t{\n\t\t\t\tlet idx = 0;\n\t\t\t\tfor(var k=0; k<tdepth; ++k)\n\t\t\t\t{\n\t\t\t\t\tconst r1 = Math.min(nrows-1, Math.max(0, (256*r+tcodes[root + 4*idx + 0]*s)>>8));\n\t\t\t\t\tconst c1 = Math.min(ncols-1, Math.max(0, (256*c+tcodes[root + 4*idx + 1]*s)>>8));\n\t\t\t\t\tconst r2 = Math.min(nrows-1, Math.max(0, (256*r+tcodes[root + 4*idx + 2]*s)>>8));\n\t\t\t\t\tconst c2 = Math.min(ncols-1, Math.max(0, (256*c+tcodes[root + 4*idx + 3]*s)>>8));\n\n\t\t\t\t\tidx = 2*idx + 1 + (pixels[r1*ldim+c1] > pixels[r2*ldim+c2])\n\t\t\t\t}\n\n\t\t\t\tconst lutidx = 2*(ntreesperstage*pow2tdepth*i + pow2tdepth*j + idx - (pow2tdepth - 1))\n\t\t\t\tdr += tpreds[lutidx + 0];\n\t\t\t\tdc += tpreds[lutidx + 1];\n\n\t\t\t\troot += 4*pow2tdepth - 4;\n\t\t\t}\n\n\t\t\tr = r + dr*s;\n\t\t\tc = c + dc*s;\n\n\t\t\ts = s*scalemul;\n\t\t}\n\n\t\treturn [r, c];\n\t}\n\t/*\n\t\tthis function applies random perturbations to the default rectangle (r, c, s)\n\t*/\n\tfunction loc_fun_with_perturbs(r, c, s, nperturbs, image)\n\t{\n\t\tconst rows=[], cols=[];\n\n\t\tfor(let i=0; i<nperturbs; ++i)\n\t\t{\n\t\t\tconst _s = s*(0.925 + 0.15*Math.random());\n\t\t\tlet _r = r + s*0.15*(0.5 - Math.random());\n\t\t\tlet _c = c + s*0.15*(0.5 - Math.random());\n\n\t\t\t[_r, _c] = loc_fun(_r, _c, _s, image.pixels, image.nrows, image.ncols, image.ldim)\n\n\t\t\trows.push(_r)\n\t\t\tcols.push(_c)\n\t\t}\n\n\t\t// return the median along each axis\n\t\trows.sort()\n\t\tcols.sort()\n\n\t\treturn [rows[Math.round(nperturbs/2)], cols[Math.round(nperturbs/2)]];\n\t}\n\t/*\n\t\twe're done\n\t*/\n\treturn loc_fun_with_perturbs;\n}\n\nexports.lploc = lploc","import { CallbackFrame } from \"../typings/global\";\r\n\r\n/*\r\n\tThis code was taken from https://github.com/cbrandolino/camvas and modified to suit our needs\r\n*/\r\n/*\r\nCopyright (c) 2012 Claudio Brandolino\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n// The function takes a canvas context and a `drawFunc` function.\r\n// `drawFunc` receives two parameters, the video and the time since\r\n// the last time it was called.\r\nexport default class Camvas {\r\n  public videoEl: HTMLVideoElement;\r\n  private _raId: number = 0;\r\n  /**\r\n   *\r\n   * @param callback callback to update\r\n   */\r\n  constructor(\r\n    public callback?: CallbackFrame,\r\n    public constraints: MediaStreamConstraints = { video: true, audio: false }\r\n  ) {\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      (navigator as any).webkitGetUserMedia ||\r\n      (navigator as any).mozGetUserMedia;\r\n    this.callback = callback;\r\n\r\n    // We can't `new Video()` yet, so we'll resort to the vintage\r\n    // \"hidden div\" hack for dynamic loading.\r\n    var streamContainer = document.createElement(\"div\");\r\n    this.videoEl = document.createElement(\"video\");\r\n\r\n    // If we don't do this, the stream will not be played.\r\n    // By the way, the play and pause controls work as usual\r\n    // for streamed videos.\r\n    this.videoEl.setAttribute(\"autoplay\", \"1\");\r\n    this.videoEl.setAttribute(\"playsinline\", \"1\"); // important for iPhones\r\n\r\n    // The video should fill out all of the canvas\r\n    this.videoEl.setAttribute(\"width\", \"1\");\r\n    this.videoEl.setAttribute(\"height\", \"1\");\r\n\r\n    streamContainer.appendChild(this.videoEl);\r\n    document.body.appendChild(streamContainer);\r\n    navigator.mediaDevices.getUserMedia(constraints).then(\r\n      stream => {\r\n        // Yay, now our webcam input is treated as a normal video and\r\n        // we can start having fun\r\n        this.videoEl.srcObject = stream;\r\n        this.update();\r\n      },\r\n      err => {\r\n        if (err) throw err;\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * @description check if camera canvas started\r\n   */\r\n  get started(): boolean {\r\n    return !this.videoEl.paused;\r\n  }\r\n  /**\r\n   * @description get video element\r\n   */\r\n  get video(): HTMLVideoElement {\r\n    return this.videoEl;\r\n  }\r\n  /**\r\n   *\r\n   * @param constraints Change MediaStreamContraints\r\n   */\r\n  play() {\r\n    // The callback happens when we are starting to stream the video.\r\n    return new Promise((resolve, reject) => {\r\n      if (!!this.videoEl.srcObject) {\r\n        this.videoEl.paused\r\n          ? this.videoEl\r\n              .play()\r\n              .then(() => this.update())\r\n              .then(resolve)\r\n          : resolve();\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Stop camvas\r\n   */\r\n  stop() {\r\n    if (this.videoEl && this.videoEl.srcObject) {\r\n      this.pause();\r\n      // stop video to unmount\r\n      (<MediaStream>this.videoEl.srcObject)\r\n        .getTracks()\r\n        .forEach(track => track.stop());\r\n      this.videoEl.srcObject = null;\r\n    }\r\n  }\r\n  /**\r\n   * pause camvas\r\n   */\r\n  pause() {\r\n    this.videoEl.pause();\r\n  }\r\n\r\n  /**\r\n   * update frame\r\n   */\r\n  private update() {\r\n    if (!this.callback) return;\r\n    var last = Date.now();\r\n    console.log(this.videoEl);\r\n    var loop = () => {\r\n      /*  if (this.videoEl.paused || this.videoEl.ended || !this.callback) {\r\n        this._raId && cancelAnimationFrame(this._raId);\r\n        this._raId = 0;\r\n        return;\r\n      } */\r\n      // For some effects, you might want to know how much time is passed\r\n      // since the last frame; that's why we pass along a Delta time `dt`\r\n      // variable (expressed in milliseconds)\r\n      var dt = Date.now() - last;\r\n      this.callback && this.callback(this.videoEl, dt);\r\n      last = Date.now();\r\n      this._raId = requestAnimationFrame(loop);\r\n    };\r\n    this._raId = requestAnimationFrame(loop);\r\n  }\r\n}\r\n"],"sourceRoot":""}